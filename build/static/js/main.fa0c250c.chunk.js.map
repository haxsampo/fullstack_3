{"version":3,"sources":["services/address.js","index.js"],"names":["baseURL","axios","get","then","response","data","newObject","post","delNum","console","log","delete","Field","onUpdate","value","inputText","onChange","AddingField","fields","addName","onSubmit","map","f","key","type","DelButt","number","delFunction","onClick","NumbersComp","contactsToShow","p","name","id","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","suodatin","setSuodatin","useEffect","addressService","initialAddress","e","target","length","filter","contact","toLowerCase","includes","event","preventDefault","find","person","alert","returnedAddress","concat","window","confirm","ret","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa0c250c.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseURL = 'https://radiant-ravine-49139.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request =  axios.get(baseURL)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n     const request = axios.post(baseURL, newObject)\r\n     return request.then(response => response.data)\r\n}\r\n\r\nconst delNum = delNum => {\r\n    console.log(baseURL+'/'+delNum)\r\n    const request = axios.delete(baseURL+'/'+delNum )\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\n\r\nexport default {\r\n    getAll: getAll,\r\n    create: create,\r\n    delNum: delNum\r\n}","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport axios from 'axios'\nimport addressService from './services/address'\n\n\n\nconst Field = ({ onUpdate, value, inputText }) => (\n    <div>\n        {inputText} <input\n            value={value}\n            onChange={onUpdate}\n        />\n    </div>\n)\n\nconst AddingField = ({ fields, addName }) => (\n    <form onSubmit={addName}>\n        <h2>Lisää sällää</h2>\n        {fields.map( f => <Field key={f.key} onUpdate={f.onUpdate} value={f.value} inputText={f.inputText} />)}\n        <div>\n            <button type=\"submit\">add</button>\n        </div>\n    </form>\n\n)\n\nconst DelButt = ({number, delFunction}) => {\n    return (\n    <button onClick={() => delFunction(number)}>\n        delete\n    </button>\n    )\n}\n\nconst NumbersComp = ({contactsToShow, delFunction}) => (\n    <div>\n        <h2>Numbers</h2>\n        {contactsToShow.map(p => <div key={p.name}>\n             {p.name} {p.number}\n             <DelButt number={p.id} delFunction={delFunction}/>\n             </div>)}\n    </div>\n)\n\nconst App = () => {\n    const [persons, setPersons] = useState([\n    ])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [suodatin, setSuodatin] = useState('')\n\n\n    //MMISSÄ VAIHEESSA TOI ID LISÄTÄÄN, VOIKO DELETENAPPI KÄYTTÄÄ HUOLETTA IDTÄ? NANI KOKEILE SILLEEN ETTÄ KÄYTTÄÄ, HUOLEHDI ONGELMISTA MYÖHEMMIN\n    const addName = (event) => {\n        event.preventDefault();\n        if (persons.find(person => newName === person.name)) {\n            alert(`${newName} ei kelpaa, haista vittu`);\n        } else {\n            const uusiNimNro = {name: newName, number: newNumber}\n            addressService\n                .create(uusiNimNro)\n                .then(returnedAddress => {\n                    setPersons(persons.concat(returnedAddress))\n                    console.log(persons)\n                    setNewName('')\n                    setNewNumber('')\n                })\n        }\n    }\n\n    useEffect(() => {\n        addressService\n            .getAll()\n            .then(initialAddress => {\n                setPersons(initialAddress)\n            })\n    }, [])\n\n    const fields = [\n        {\n            onUpdate: e => setNewName(e.target.value),\n            value: newName,\n            inputText: 'Name: ',\n            key: 'newNameField'\n        },\n        {\n            onUpdate: e => setNewNumber(e.target.value),\n            value: newNumber,\n            inputText: 'Number: ',\n            key: 'newNumberField'\n        }\n    ]\n\n    const delFunction = (name) => {\n        if(window.confirm(\"Poistetaanko \", name,\"?\")) {\n            addressService\n                .delNum(name)\n                .then( ret => {\n                    addressService\n                        .getAll()\n                        .then(data => {\n                            setPersons(data)\n                        })\n                })\n        } else {\n            console.log(\"juuei mitään\")\n        }       \n    }\n\n    let contactsToShow;\n    if (suodatin.length === 0) {\n        contactsToShow = persons;\n    } else {\n        contactsToShow = persons.filter(contact => contact.name.toLowerCase().includes(suodatin.toLowerCase()))\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Field onUpdate={e => setSuodatin(e.target.value)} inputText='filter shown with: '/>\n            <AddingField fields={fields} addName={addName} />           \n            <NumbersComp contactsToShow={contactsToShow} delFunction={delFunction} />\n        </div>\n    )\n\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'))\n\nexport default App"],"sourceRoot":""}